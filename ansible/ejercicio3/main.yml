---
- name: Actualizar la lista de paquetes
  apt:
    update_cache: yes

- name: Instalar pip si no está disponible
  apt:
    name: python3-pip
    state: present

- name: Actualizar pip a la última versión
  command: python3 -m pip install --upgrade pip
  args:
    creates: /usr/local/lib/python3.8/dist-packages/pip

- name: Instalar flask usando el interpreter de python
  pip:
    name: flask
    executable: /usr/bin/pip3

- name: Verificar que Flask está instalado
  command: python3 -c "import flask"
  register: flask_installed
  failed_when: flask_installed.rc != 0
  changed_when: false

- name: Instalar Gunicorn usando el interpreter de python
  pip:
    name: gunicorn
    executable: /usr/bin/pip3

- name: Verificar que Gunicorn está instalado
  command: python3 -c "import gunicorn"
  changed_when: false
  failed_when: false

- name: Verificar que Gunicorn está instalado
  command: python3 -c "import gunicorn"
  register: gunicorn_installed
  failed_when: gunicorn_installed.rc != 0
  changed_when: false

- name: Crear directorio para la aplicación Flask
  file:
    path: /opt/ejercicio3
    state: directory
    mode: '0750'

- name: Copiar la aplicación Flask
  copy:
    src: templates/app.py
    dest: /opt/ejercicio3/app.py
    mode: '0755'

- name: Crear archivo de servicio systemd para Flask en el puerto {{ item }}
  template:
    src: templates/flask_service.j2
    dest: /etc/systemd/system/flask_{{ item }}.service
  loop:
    - 5000
    - 5001
    - 5002
  notify: Reiniciar Nginx

- name: Iniciar y habilitar los servicios Flask
  systemd:
    name: flask_{{ item }}.service
    state: started
    enabled: yes
  loop:
    - 5000
    - 5001
    - 5002

- name: Copiar configuración de Nginx para balanceo de carga
  template:
    src: templates/nginx_loadbalancer.conf.j2
    dest: /etc/nginx/sites-available/default
  notify: Reiniciar Nginx





